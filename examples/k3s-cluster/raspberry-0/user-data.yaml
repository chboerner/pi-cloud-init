#cloud-config

hostname: raspberry-0
# update /etc/hosts according to hostname (otherwise sudo will complain)
manage_etc_hosts: true
locale: en_US.UTF-8
timezone: Europe/Berlin

users:
- default # pi user
- name: tim
  gecos: Tim Ebert
  groups: sudo
  sudo: "ALL=(ALL) NOPASSWD:ALL"
  # set to false to allow password login for this user
  # only for verifying with dockerpi, passwd auth over SSH should be disabled
  lock_passwd: true
  shell: /bin/bash
  ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDzEE4Z7wZXrO6HZF5XjSeF0qIBLLbaJiI5w3TDnzh6k+Mcg17ahBYLyA+CFkZOpU668hh3AbY+ess2iVkPQ9JvurnKEVUO7Q2kyU8YaXbX+eSsaaw7Y9eNb140br9K8/4DwE2q4cXlSTkhsHu9XJJads6ByXhVo2RZIsY07BWGdAAwv4nThVTMehxjzstCMWnfSEa1oHgd59R09hAqHHqJ1Al8RfgKzFevRv+zFj2bftZRH6bjLlRIj2izkIPjdgrwME9/2tJ5CwBelxnVa9KPtd0ndu0E3GfBwEmw0De3bGD1rTST3l29klBTJL0HXZrFMBKPcoE/CiBk8ZINOdjxutmr6FegLdsrIEQqyjC9KNaG8wPKXGGqfmtXX4dpqxf7z5W730D3BeNlT51a/NHFw+uTBOe+CmwKKRmBvUS/CHEUIo5di4bs342ZaTUrRdoIKz1kde3TSIcC7Q0T3X0GIFGaHcxqWWIz9PxFm1YKQ/WvIQXdVtk/rui82wWyGCrBRfsMivwmVkS05C6E1lsyKAFK6w2jX1P49ZuzP/gfd6oF7u0K/17MEmF/Lqg2ea5KwtN3djUhnR9njxR1iy0UNDPYzoOwqbNi8ENO9CO8If6rgJdTCwH3u2no5fL2bJwyuVQF2kser4DDDgCBIzegB4BpY7gs9yNEJqcS4bUTqQ==
  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJsGtuJYWgCwGHznLg8A2Iqm124z4vvoZmC0cIwr1D6V

# set to true to allow ssh password authentication (disabled by default)
ssh_pwauth: false

bootcmd:
# disable ipv6 on all interfaces
- sysctl net.ipv6.conf.all.disable_ipv6=1

write_files:
- path: /var/lib/rancher/k3s/server/token
  permissions: "0600"
  content: |
    some-random-string
- path: /etc/rancher/k3s/config.yaml
  permissions: "0600"
  content: |
    cluster-init: true
    tls-san:
    - 192.168.0.20
    - 192.168.0.30
    token-file: /var/lib/rancher/k3s/server/token
    disable:
    - servicelb
    node-label:
    - node.kubernetes.io/instance-type=pi-4b-4
    - beta.kubernetes.io/instance-type=pi-4b-4
- path: /var/lib/cloud/scripts/per-once/00-install-k3s.sh
  permissions: "0700"
  content: |
    #!/bin/bash
    echo "Installing k3s (server)"

    curl -sfL https://get.k3s.io | INSTALL_K3S_CHANNEL="v1.20" sh -s - server
- path: /var/lib/rancher/k3s/server/manifests/kube-vip.yaml
  permissions: "0700"
  content: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: kube-vip
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
      name: system:kube-vip-role
    rules:
    - apiGroups: [""]
      resources: ["services", "services/status", "nodes"]
      verbs: ["list","get","watch", "update"]
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["list", "get", "watch", "update", "create"]
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: system:kube-vip-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:kube-vip-role
    subjects:
    - kind: ServiceAccount
      name: kube-vip
      namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: kube-vip
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          name: kube-vip
      template:
        metadata:
          labels:
            name: kube-vip
        spec:
          containers:
          - args:
            - manager
            - --controlplane
            - --arp
            - --address=192.168.0.30
            - --port=6443
            - --interface=eth0
            - --leaderElection
            - --leaseDuration=15
            - --leaseRenewDuration=10
            - --leaseRetry=2
            - --namespace=kube-system
            image: plndr/kube-vip:0.3.2
            name: kube-vip
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
                - SYS_TIME
          hostNetwork: true
          serviceAccountName: kube-vip
          nodeSelector:
            kubernetes.io/os: linux
            kubernetes.io/arch: arm64
            node-role.kubernetes.io/master: "true"
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
- path: /var/lib/rancher/k3s/server/manifests/metallb.yaml
  permissions: "0700"
  content: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: metallb-system
      labels:
        app: metallb
    ---
    apiVersion: helm.cattle.io/v1
    kind: HelmChart
    metadata:
      name: metallb
      namespace: metallb-system
    spec:
      repo: https://charts.bitnami.com/bitnami
      chart: metallb
      version: 2.3.4
      valuesContent: |-
        configInline: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - 192.168.0.31-192.168.0.59
        controller:
          image:
            repository: metallb/controller
            tag: v0.9.5
        speaker:
          image:
            repository: metallb/speaker
            tag: v0.9.5
